{"ast":null,"code":"import { create } from 'zustand';\nimport { fetchUsers } from '../api/getUsers';\nimport { getAuth, signOut } from 'firebase/auth';\nconst useStore = create(set => ({\n  // user: {\n  // \tuid: '',\n  // \temail: '',\n  // \tclips: [] as Clip[],\n  // \taddedClips: [] as AddedClip[],\n  // \tcreatedAt: '',\n  // },\n  user: {},\n  users: [],\n  loading: false,\n  error: null,\n  loadUsers: async () => {\n    set({\n      loading: true,\n      error: null\n    });\n    try {\n      const users = await fetchUsers();\n      set({\n        users\n      });\n    } catch (error) {\n      set({\n        error: 'Failed To Fetch Users'\n      });\n    } finally {\n      set({\n        loading: false\n      });\n    }\n  },\n  onLogOut: async () => {\n    const auth = getAuth();\n    try {\n      await signOut(auth);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n}));\nexport default useStore;","map":{"version":3,"names":["create","fetchUsers","getAuth","signOut","useStore","set","user","users","loading","error","loadUsers","onLogOut","auth","err","console"],"sources":["/Users/mac/clips-project/src/store/index.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { AddedClip, Clip, UserData } from '../types';\nimport { fetchUsers } from '../api/getUsers';\nimport { getAuth, signOut } from 'firebase/auth';\n\ninterface UserState {\n\tuser: UserData;\n\tusers: UserData[];\n\tloading: boolean;\n\terror: string | null;\n\tloadUsers: () => Promise<void>;\n}\n\nconst useStore = create<UserState>(set => ({\n\t// user: {\n\t// \tuid: '',\n\t// \temail: '',\n\t// \tclips: [] as Clip[],\n\t// \taddedClips: [] as AddedClip[],\n\t// \tcreatedAt: '',\n\t// },\n\tuser: {} as UserData,\n\tusers: [] as UserData[],\n\tloading: false,\n\terror: null,\n\tloadUsers: async () => {\n\t\tset({ loading: true, error: null });\n\t\ttry {\n\t\t\tconst users = await fetchUsers();\n\t\t\tset({ users });\n\t\t} catch (error) {\n\t\t\tset({ error: 'Failed To Fetch Users' });\n\t\t} finally {\n\t\t\tset({ loading: false });\n\t\t}\n\t},\n\n\tonLogOut: async () => {\n\t\tconst auth = getAuth();\n\n\t\ttry {\n\t\t\tawait signOut(auth);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t},\n}));\n\nexport default useStore;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAEhC,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,OAAO,EAAEC,OAAO,QAAQ,eAAe;AAUhD,MAAMC,QAAQ,GAAGJ,MAAM,CAAYK,GAAG,KAAK;EAC1C;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC,CAAa;EACpBC,KAAK,EAAE,EAAgB;EACvBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,MAAAA,CAAA,KAAY;IACtBL,GAAG,CAAC;MAAEG,OAAO,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACnC,IAAI;MACH,MAAMF,KAAK,GAAG,MAAMN,UAAU,CAAC,CAAC;MAChCI,GAAG,CAAC;QAAEE;MAAM,CAAC,CAAC;IACf,CAAC,CAAC,OAAOE,KAAK,EAAE;MACfJ,GAAG,CAAC;QAAEI,KAAK,EAAE;MAAwB,CAAC,CAAC;IACxC,CAAC,SAAS;MACTJ,GAAG,CAAC;QAAEG,OAAO,EAAE;MAAM,CAAC,CAAC;IACxB;EACD,CAAC;EAEDG,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACrB,MAAMC,IAAI,GAAGV,OAAO,CAAC,CAAC;IAEtB,IAAI;MACH,MAAMC,OAAO,CAACS,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACbC,OAAO,CAACL,KAAK,CAACI,GAAG,CAAC;IACnB;EACD;AACD,CAAC,CAAC,CAAC;AAEH,eAAeT,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}