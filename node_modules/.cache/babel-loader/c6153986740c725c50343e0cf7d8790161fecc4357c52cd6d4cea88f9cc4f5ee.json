{"ast":null,"code":"import { arrayUnion, doc, getDoc, setDoc, updateDoc } from 'firebase/firestore';\nimport { db } from '../plugins/firebase';\nexport const addUserToUserList = async user => {\n  const userRef = doc(db, 'userList', 'users');\n  try {\n    const userDoc = await getDoc(userRef);\n    if (userDoc.exists()) {\n      await updateDoc(userRef, {\n        users: arrayUnion(user)\n      });\n    } else {\n      await setDoc(userRef, {\n        users: [user]\n      });\n    }\n  } catch (err) {\n    console.error('Firestore 업데이트 실패:', err);\n  }\n};\nexport const registerUser = async (user, userName) => {\n  const userData = {\n    uid: user.uid,\n    email: user.email,\n    displayName: userName,\n    clips: [],\n    addedClips: [],\n    createdAt: new Date().toISOString()\n  };\n  await addUserToUserList(userData);\n};","map":{"version":3,"names":["arrayUnion","doc","getDoc","setDoc","updateDoc","db","addUserToUserList","user","userRef","userDoc","exists","users","err","console","error","registerUser","userName","userData","uid","email","displayName","clips","addedClips","createdAt","Date","toISOString"],"sources":["/Users/mac/clips-project/src/api/addUserToUserList.ts"],"sourcesContent":["import { arrayUnion, doc, getDoc, setDoc, updateDoc } from 'firebase/firestore';\nimport { UserData } from '../types';\nimport { db } from '../plugins/firebase';\nimport { User as FirebaseUser } from 'firebase/auth';\n\nexport const addUserToUserList = async (user: UserData) => {\n\tconst userRef = doc(db, 'userList', 'users');\n\n\ttry {\n\t\tconst userDoc = await getDoc(userRef);\n\n\t\tif (userDoc.exists()) {\n\t\t\tawait updateDoc(userRef, {\n\t\t\t\tusers: arrayUnion(user),\n\t\t\t});\n\t\t} else {\n\t\t\tawait setDoc(userRef, {\n\t\t\t\tusers: [user],\n\t\t\t});\n\t\t}\n\t} catch (err) {\n\t\tconsole.error('Firestore 업데이트 실패:', err);\n\t}\n};\n\nexport const registerUser = async (user: FirebaseUser, userName: string) => {\n\tconst userData: UserData = {\n\t\tuid: user.uid,\n\t\temail: user.email,\n\t\tdisplayName: userName,\n\t\tclips: [],\n\t\taddedClips: [],\n\t\tcreatedAt: new Date().toISOString(),\n\t};\n\n\tawait addUserToUserList(userData);\n};\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,SAAS,QAAQ,oBAAoB;AAE/E,SAASC,EAAE,QAAQ,qBAAqB;AAGxC,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,IAAc,IAAK;EAC1D,MAAMC,OAAO,GAAGP,GAAG,CAACI,EAAE,EAAE,UAAU,EAAE,OAAO,CAAC;EAE5C,IAAI;IACH,MAAMI,OAAO,GAAG,MAAMP,MAAM,CAACM,OAAO,CAAC;IAErC,IAAIC,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;MACrB,MAAMN,SAAS,CAACI,OAAO,EAAE;QACxBG,KAAK,EAAEX,UAAU,CAACO,IAAI;MACvB,CAAC,CAAC;IACH,CAAC,MAAM;MACN,MAAMJ,MAAM,CAACK,OAAO,EAAE;QACrBG,KAAK,EAAE,CAACJ,IAAI;MACb,CAAC,CAAC;IACH;EACD,CAAC,CAAC,OAAOK,GAAG,EAAE;IACbC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,GAAG,CAAC;EACzC;AACD,CAAC;AAED,OAAO,MAAMG,YAAY,GAAG,MAAAA,CAAOR,IAAkB,EAAES,QAAgB,KAAK;EAC3E,MAAMC,QAAkB,GAAG;IAC1BC,GAAG,EAAEX,IAAI,CAACW,GAAG;IACbC,KAAK,EAAEZ,IAAI,CAACY,KAAK;IACjBC,WAAW,EAAEJ,QAAQ;IACrBK,KAAK,EAAE,EAAE;IACTC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;EACnC,CAAC;EAED,MAAMnB,iBAAiB,CAACW,QAAQ,CAAC;AAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}