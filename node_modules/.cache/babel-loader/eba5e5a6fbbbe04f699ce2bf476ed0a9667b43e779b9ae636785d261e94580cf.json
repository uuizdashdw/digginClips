{"ast":null,"code":"import { arrayUnion, doc, getDoc, setDoc, updateDoc } from 'firebase/firestore';\nimport { db } from '../plugins/firebase';\nexport const addUserToUserList = async user => {\n  const userRef = doc(db, 'userList', 'users');\n  try {\n    const userDoc = await getDoc(userRef);\n    const userNewData = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      emailVerified: user.emailVerified,\n      metadata: {\n        createdAt: user.metadata.creationTime,\n        lastSignInTime: user.metadata.lastSignInTime\n      },\n      clips: user.clips,\n      addedClips: user.addedClips\n    };\n    if (userDoc.exists()) {\n      await updateDoc(userRef, {\n        users: arrayUnion(user)\n      });\n    } else {\n      await setDoc(userRef, {\n        users: [user]\n      });\n    }\n  } catch (err) {\n    console.error('Firestore 업데이트 실패:', err);\n  }\n};\nexport const registerUser = async (user, userName) => {\n  const userData = {\n    uid: user.uid,\n    email: user.email,\n    displayName: userName,\n    metadata: user.metadata,\n    clips: [],\n    addedClips: [],\n    createdAt: new Date().toISOString()\n  };\n  await addUserToUserList(userData);\n};","map":{"version":3,"names":["arrayUnion","doc","getDoc","setDoc","updateDoc","db","addUserToUserList","user","userRef","userDoc","userNewData","uid","email","displayName","emailVerified","metadata","createdAt","creationTime","lastSignInTime","clips","addedClips","exists","users","err","console","error","registerUser","userName","userData","Date","toISOString"],"sources":["/Users/mac/clips-project/src/api/addUserToUserList.ts"],"sourcesContent":["import { arrayUnion, doc, getDoc, setDoc, updateDoc } from 'firebase/firestore';\nimport { UserData } from '../types';\nimport { db } from '../plugins/firebase';\nimport { User as FirebaseUser } from 'firebase/auth';\n\nexport const addUserToUserList = async (user: UserData) => {\n\tconst userRef = doc(db, 'userList', 'users');\n\n\ttry {\n\t\tconst userDoc = await getDoc(userRef);\n\n\t\tconst userNewData = {\n\t\t\tuid: user.uid,\n\t\t\temail: user.email,\n\t\t\tdisplayName: user.displayName,\n\t\t\temailVerified: user.emailVerified,\n\t\t\tmetadata: {\n\t\t\t\tcreatedAt: user.metadata.creationTime,\n\t\t\t\tlastSignInTime: user.metadata.lastSignInTime,\n\t\t\t},\n\t\t\tclips: user.clips,\n\t\t\taddedClips: user.addedClips,\n\t\t};\n\n\t\tif (userDoc.exists()) {\n\t\t\tawait updateDoc(userRef, {\n\t\t\t\tusers: arrayUnion(user),\n\t\t\t});\n\t\t} else {\n\t\t\tawait setDoc(userRef, {\n\t\t\t\tusers: [user],\n\t\t\t});\n\t\t}\n\t} catch (err) {\n\t\tconsole.error('Firestore 업데이트 실패:', err);\n\t}\n};\n\nexport const registerUser = async (user: FirebaseUser, userName: string) => {\n\tconst userData: UserData = {\n\t\tuid: user.uid,\n\t\temail: user.email,\n\t\tdisplayName: userName,\n\t\tmetadata: user.metadata,\n\t\tclips: [],\n\t\taddedClips: [],\n\t\tcreatedAt: new Date().toISOString(),\n\t};\n\n\tawait addUserToUserList(userData);\n};\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,SAAS,QAAQ,oBAAoB;AAE/E,SAASC,EAAE,QAAQ,qBAAqB;AAGxC,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,IAAc,IAAK;EAC1D,MAAMC,OAAO,GAAGP,GAAG,CAACI,EAAE,EAAE,UAAU,EAAE,OAAO,CAAC;EAE5C,IAAI;IACH,MAAMI,OAAO,GAAG,MAAMP,MAAM,CAACM,OAAO,CAAC;IAErC,MAAME,WAAW,GAAG;MACnBC,GAAG,EAAEJ,IAAI,CAACI,GAAG;MACbC,KAAK,EAAEL,IAAI,CAACK,KAAK;MACjBC,WAAW,EAAEN,IAAI,CAACM,WAAW;MAC7BC,aAAa,EAAEP,IAAI,CAACO,aAAa;MACjCC,QAAQ,EAAE;QACTC,SAAS,EAAET,IAAI,CAACQ,QAAQ,CAACE,YAAY;QACrCC,cAAc,EAAEX,IAAI,CAACQ,QAAQ,CAACG;MAC/B,CAAC;MACDC,KAAK,EAAEZ,IAAI,CAACY,KAAK;MACjBC,UAAU,EAAEb,IAAI,CAACa;IAClB,CAAC;IAED,IAAIX,OAAO,CAACY,MAAM,CAAC,CAAC,EAAE;MACrB,MAAMjB,SAAS,CAACI,OAAO,EAAE;QACxBc,KAAK,EAAEtB,UAAU,CAACO,IAAI;MACvB,CAAC,CAAC;IACH,CAAC,MAAM;MACN,MAAMJ,MAAM,CAACK,OAAO,EAAE;QACrBc,KAAK,EAAE,CAACf,IAAI;MACb,CAAC,CAAC;IACH;EACD,CAAC,CAAC,OAAOgB,GAAG,EAAE;IACbC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,GAAG,CAAC;EACzC;AACD,CAAC;AAED,OAAO,MAAMG,YAAY,GAAG,MAAAA,CAAOnB,IAAkB,EAAEoB,QAAgB,KAAK;EAC3E,MAAMC,QAAkB,GAAG;IAC1BjB,GAAG,EAAEJ,IAAI,CAACI,GAAG;IACbC,KAAK,EAAEL,IAAI,CAACK,KAAK;IACjBC,WAAW,EAAEc,QAAQ;IACrBZ,QAAQ,EAAER,IAAI,CAACQ,QAAQ;IACvBI,KAAK,EAAE,EAAE;IACTC,UAAU,EAAE,EAAE;IACdJ,SAAS,EAAE,IAAIa,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;EACnC,CAAC;EAED,MAAMxB,iBAAiB,CAACsB,QAAQ,CAAC;AAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}