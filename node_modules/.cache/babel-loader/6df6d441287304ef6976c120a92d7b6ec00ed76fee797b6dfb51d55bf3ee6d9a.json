{"ast":null,"code":"var _jsxFileName = \"/Users/mac/clips-project/src/components/route/PrivateServiceRoute.tsx\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateServiceRoute = ({\n  element,\n  user,\n  requireSignUp\n}) => {\n  console.log('로그인 상태:: ', user);\n\n  // 회원가입한 사용자만 접근할 수 있도록 설정\n  if (requireSignUp && !user) {\n    if (window.confirm('회원가입이 필요한 서비스입니다. 회원가입을 하시겠습니까?')) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: '/signUp',\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this);\n  }\n\n  // 모든 조건을 통과한 경우 렌더링\n  return element;\n};\n_c = PrivateServiceRoute;\nexport default PrivateServiceRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateServiceRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","PrivateServiceRoute","element","user","requireSignUp","console","log","window","confirm","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/clips-project/src/components/route/PrivateServiceRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { UserData } from '../../types';\n\ninterface PrivateRouteProps {\n\telement: React.ReactElement; // 렌더링할 요소\n\tuser: UserData | null; // 사용자 데이터\n\trequireSignUp?: boolean;\n}\n\nconst PrivateServiceRoute = ({\n\telement,\n\tuser,\n\trequireSignUp,\n}: PrivateRouteProps) => {\n\tconsole.log('로그인 상태:: ', user);\n\n\t// 회원가입한 사용자만 접근할 수 있도록 설정\n\tif (requireSignUp && !user) {\n\t\tif (\n\t\t\twindow.confirm('회원가입이 필요한 서비스입니다. 회원가입을 하시겠습니까?')\n\t\t) {\n\t\t\treturn <Navigate to={'/signUp'} replace />;\n\t\t}\n\t\treturn <Navigate to=\"/\" replace />;\n\t}\n\n\t// 모든 조건을 통과한 경우 렌더링\n\treturn element;\n};\n\nexport default PrivateServiceRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS5C,MAAMC,mBAAmB,GAAGA,CAAC;EAC5BC,OAAO;EACPC,IAAI;EACJC;AACkB,CAAC,KAAK;EACxBC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,IAAI,CAAC;;EAE9B;EACA,IAAIC,aAAa,IAAI,CAACD,IAAI,EAAE;IAC3B,IACCI,MAAM,CAACC,OAAO,CAAC,iCAAiC,CAAC,EAChD;MACD,oBAAOR,OAAA,CAACF,QAAQ;QAACW,EAAE,EAAE,SAAU;QAACC,OAAO;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC3C;IACA,oBAAOd,OAAA,CAACF,QAAQ;MAACW,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnC;;EAEA;EACA,OAAOZ,OAAO;AACf,CAAC;AAACa,EAAA,GAnBId,mBAAmB;AAqBzB,eAAeA,mBAAmB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}