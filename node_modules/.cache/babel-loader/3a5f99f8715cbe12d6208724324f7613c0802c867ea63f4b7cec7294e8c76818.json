{"ast":null,"code":"// 이메일 형식 검증\nconst validateEmail = email => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n\n// 비밀번호 형식 검증\nconst validatePassword = password => {\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{8,}$/;\n  return passwordRegex.test(password);\n};\n\n// 비밀번호 일치 검증\nconst validatePasswordCheck = (password, checkPasssword) => {\n  console.log('## 시발 뭐지 진짜 ', password === checkPasssword);\n  return password === checkPasssword;\n};\nconst validateUserName = userName => {\n  return userName.length > 2;\n};\n\n// 회원가입 폼 데이터 검증\n\nconst validateFormData = ({\n  formData,\n  fieldName\n}) => {\n  if (fieldName === 'userAccount') {\n    return validateEmail(formData.userAccount);\n  }\n  if (fieldName === 'userPassword') {\n    return validatePassword(formData.userPassword);\n  }\n  if (fieldName === 'userName') {\n    return validateUserName(formData.userName);\n  }\n  return false;\n};\nexport { validateFormData, validatePasswordCheck };","map":{"version":3,"names":["validateEmail","email","emailRegex","test","validatePassword","password","passwordRegex","validatePasswordCheck","checkPasssword","console","log","validateUserName","userName","length","validateFormData","formData","fieldName","userAccount","userPassword"],"sources":["/Users/mac/clips-project/src/utils/vaildates/isValidateAuth.ts"],"sourcesContent":["// 이메일 형식 검증\nconst validateEmail = (email: string): boolean => {\n\tconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\treturn emailRegex.test(email);\n};\n\n// 비밀번호 형식 검증\nconst validatePassword = (password: string): boolean => {\n\tconst passwordRegex =\n\t\t/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{8,}$/;\n\treturn passwordRegex.test(password);\n};\n\n// 비밀번호 일치 검증\nconst validatePasswordCheck = (\n\tpassword: string,\n\tcheckPasssword: string,\n): boolean => {\n\tconsole.log('## 시발 뭐지 진짜 ', password === checkPasssword);\n\treturn password === checkPasssword;\n};\n\nconst validateUserName = (userName: string): boolean => {\n\treturn userName.length > 2;\n};\n\n// 회원가입 폼 데이터 검증\ninterface ValidatedFormData {\n\tformData: {\n\t\tuserAccount: string;\n\t\tuserPassword: string;\n\t\tuserName?: string;\n\t};\n\tfieldName: string;\n}\n\nconst validateFormData = ({ formData, fieldName }: ValidatedFormData) => {\n\tif (fieldName === 'userAccount') {\n\t\treturn validateEmail(formData.userAccount);\n\t}\n\n\tif (fieldName === 'userPassword') {\n\t\treturn validatePassword(formData.userPassword);\n\t}\n\n\tif (fieldName === 'userName') {\n\t\treturn validateUserName(formData.userName);\n\t}\n\n\treturn false;\n};\n\nexport { validateFormData, validatePasswordCheck };\n"],"mappings":"AAAA;AACA,MAAMA,aAAa,GAAIC,KAAa,IAAc;EACjD,MAAMC,UAAU,GAAG,4BAA4B;EAC/C,OAAOA,UAAU,CAACC,IAAI,CAACF,KAAK,CAAC;AAC9B,CAAC;;AAED;AACA,MAAMG,gBAAgB,GAAIC,QAAgB,IAAc;EACvD,MAAMC,aAAa,GAClB,wEAAwE;EACzE,OAAOA,aAAa,CAACH,IAAI,CAACE,QAAQ,CAAC;AACpC,CAAC;;AAED;AACA,MAAME,qBAAqB,GAAGA,CAC7BF,QAAgB,EAChBG,cAAsB,KACT;EACbC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEL,QAAQ,KAAKG,cAAc,CAAC;EACxD,OAAOH,QAAQ,KAAKG,cAAc;AACnC,CAAC;AAED,MAAMG,gBAAgB,GAAIC,QAAgB,IAAc;EACvD,OAAOA,QAAQ,CAACC,MAAM,GAAG,CAAC;AAC3B,CAAC;;AAED;;AAUA,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAA6B,CAAC,KAAK;EACxE,IAAIA,SAAS,KAAK,aAAa,EAAE;IAChC,OAAOhB,aAAa,CAACe,QAAQ,CAACE,WAAW,CAAC;EAC3C;EAEA,IAAID,SAAS,KAAK,cAAc,EAAE;IACjC,OAAOZ,gBAAgB,CAACW,QAAQ,CAACG,YAAY,CAAC;EAC/C;EAEA,IAAIF,SAAS,KAAK,UAAU,EAAE;IAC7B,OAAOL,gBAAgB,CAACI,QAAQ,CAACH,QAAQ,CAAC;EAC3C;EAEA,OAAO,KAAK;AACb,CAAC;AAED,SAASE,gBAAgB,EAAEP,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}